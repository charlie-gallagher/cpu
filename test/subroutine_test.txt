; Initialize stack
	LDX_M
	IO_START
	DECX
	00h
	TXS
	00h

; Jump to start of program
	JMP
	start

; Define a subroutine that prints "text_string" variable
print_io:
	LDX_M    ; 08h
	FFh
	INCX    ; This resets the index to 0
	00h
	LDA_X
	text_string
	STA_X
	IO_START
	BNE
	-8
	RTS   ; 12h
	00h

; Define a subroutine to clear the IO portion of memory
clear_io:
	LDX_M
	10h
	LDA_M
	00h
	STA_X   ; Start of loop
	IO_START
	DECX
	00h
	BPL
	-6
	RTS
	00h

; Start of program
start:
	LDX_M  ; 20h
	00h
	LDA_M 
	'h'
	STA_X
	text_string
	INCX
	00h
	LDA_M 
	'i'
	STA_X
	text_string
	INCX
	00h
	LDA_M 
	'!'
	STA_X
	text_string

; Write to IO
	JSR
	print_io

; Load a different word and print with subroutine
	LDX_M 
	00h
	LDA_M 
	'B'
	STA_X
	text_string
	INCX
	00h
	LDA_M 
	'r'
	STA_X
	text_string
	INCX
	00h
	LDA_M 
	'e'
	STA_X
	text_string

; Clear IO
	JSR
	clear_io

; Print to IO
	JSR
	print_io

HLT

text_string:		; Variable for storing text string data
	00h
